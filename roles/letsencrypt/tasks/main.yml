# SPDX-License-Identifier: MIT
---
- name: Install acme-tiny
  apt:
    name:
      - acme-tiny
      - python3-openssl

- name: Create user and group acme for acme-tiny
  user:
    name: acme
    shell: '/usr/sbin/nologin'
    home: '/var/lib/acme'
    comment: 'user to renew LetsEncrypt certificates'
    password: '*'
    system: yes

- name: Create /var/lib/acme/challenges
  file:
    path: '{{ item }}'
    state: directory
    owner: acme
    group: acme
  loop:
    - '/var/lib/acme'
    - '/var/lib/acme/challenges'

- name: 'Create /etc/letsencrypt/{{ ssl_domain }}'
  file:
    path: '/etc/letsencrypt/{{ ssl_domain }}'
    state: directory
    owner: acme
    group: root

- name: Create /opt/acme-scripts
  file:
    path: /opt/acme-scripts
    state: directory
    owner: root
    group: root

- name: Copy special scripts to /opt/acme-scripts
  copy:
    src: '{{ item }}'
    dest: '/opt/acme-scripts/{{ item }}'
    mode: 0755
    owner: root
    group: root
  loop:
    - 'new_certificate.sh'
    - 'request_certificate.sh'

- name: Create group for access to private key
  group:
    name: sslkeyaccess
    state: present

- name: Generate domain key
  openssl_privatekey:
    mode: '{{ item.mode }}'
    owner: root
    group: '{{ item.group }}'
    path: '{{ item.path }}'
    type: RSA
  loop:
    - {'path': '/etc/letsencrypt/{{ssl_domain}}/domain.key', 'group': 'root', 'mode': '600'}
    - {'path': '/var/lib/acme/account.key', 'group': 'acme', 'mode': '640'}

- name: Build configuration for SSL certificate renewal script
  template:
    src: 'acme_scripts_config.cfg'
    dest: '/opt/acme-scripts/acme_scripts_config.cfg'
    mode: 0755
    owner: root
    group: root

- name: Create cronjob for SSL certificate renewal
  cron:
    name: 'LetsEncrypt certificate renewal'
    day: '10'
    minute: '34'
    hour: '4'
    job: '/bin/bash /opt/acme-scripts/new_certificate.sh'
    user: root
