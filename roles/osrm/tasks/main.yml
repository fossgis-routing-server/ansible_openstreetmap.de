# SPDX-License-Identifier: MIT
---

- name: Create osrm system account
  system_account:
    name: "{{ osrm.user }}"
    home: "{{ osrm.basedir }}"

- name: Create osrmdata system account
  system_account:
    name: "{{ osrm.datauser }}"
    home: "{{ osrm.basedir }}"

- name: install prerequisites for osrm-backend
  apt:
    name: [git, clang, build-essential, cmake,  pkg-config, libprotoc-dev, protobuf-compiler,
           libprotobuf-dev, libosmpbf-dev, libpng-dev, libbz2-dev, libstxxl-dev,
           libstxxl-doc, libstxxl1v5, libxml2-dev, libzip-dev, libboost-thread-dev,
           libboost-system-dev, libboost-regex-dev, libboost-filesystem-dev,
           libboost-program-options-dev, libboost-iostreams-dev,
           libboost-test-dev, liblua5.2-dev, libtbb-dev, libexpat-dev]

- name: checkout osrm-backend
  git:
    repo: git://github.com/fossgis-routing-server/osrm-backend.git
    dest: '{{ osrm.basedir }}/osrm-backend'
    version: '512b0ac40ec53f9aa718189262ea83835a27260f'
  register: osrm_backend_build
  become: yes
  become_user: '{{ osrm.user }}'

- name: clear osrm-backend build dir
  file:
    path: '{{ osrm.basedir }}/osrm-backend/build'
    state: absent
  when: osrm_backend_build.changed

- name: create osrm-backend build dir
  file:
    path: '{{ osrm.basedir }}/osrm-backend/build'
    state: directory
    owner: '{{ osrm.user }}'
    group: '{{ osrm.user }}'

- name: build osrm-backend
  shell:
    cmd: "cmake -DCMAKE_BUILD_TYPE=Release .. && make -j {{ ansible_facts['processor_cores'] }}"
    chdir: '{{ osrm.basedir }}/osrm-backend/build/'
    creates: '{{ osrm.basedir }}/osrm-backend/build/osrm-extract'
  environment:
    CC: clang
    CXX: clang++
  become: yes
  become_user: '{{ osrm.user }}'

- name: "Website dir"
  file:
    path: '{{ osrm.websitedir }}'
    state: directory
    owner: '{{ osrm.user }}'
    group: '{{ osrm.user }}'
    mode: '0755'

- name: "Timestamps dir"
  file:
    path: '{{ osrm.websitedir }}/timestamps'
    state: directory
    owner: '{{ osrm.datauser }}'
    group: '{{ osrm.datauser }}'
    mode: '0755'

- name: install prerequisites for osrm-frontend
  apt:
    name: [node-browserify-lite, nodejs, npm]

- name: checkout osrm-frontend
  git:
    repo: git://github.com/fossgis-routing-server/osrm-frontend.git
    dest: '{{ osrm.basedir }}/osrm-frontend'
    version: 'bef727ee0af3172a86f38fe6aca580a078347ace'
    force: yes
  register: osrm_frontend_build
  become: yes
  become_user: '{{ osrm.user }}'

- name: build osrm-frontend
  shell:
    cmd: 'npm install && npm install corslite && npm run build &&
          cp -r css fonts images bundle.js bundle.js.map
          bundle.raw.js index.html debug {{ osrm.websitedir }} &&
          git checkout bundle* package*'
    chdir: '{{ osrm.basedir }}/osrm-frontend/'
  when: osrm_frontend_build.changed
  become: yes
  become_user: '{{ osrm.user }}'

- name: "Install uwsgi for request-by-coordinate dispatcher"
  apt:
    name: [python3-cherrypy3, uwsgi, uwsgi-plugin-python3]

- name: "checkout request-by-coordinate"
  git:
    repo: git://github.com/fossgis-routing-server/request-by-coordinate.git
    dest: '{{ osrm.basedir }}/request-by-coordinate'
    version: '775b6ea3dd4524905a27658103c818ad52ba0841'
    force: yes

- name: "set request-by-coordinate configuration"
  template:
    dest: '{{ osrm.basedir }}/request-by-coordinate/settings.cfg'
    src: 'request-by-coordinate.cfg.erb'
    owner: '{{ osrm.user }}'
    group: '{{ osrm.user }}'
    mode: '0644'
  notify: restart request-by-coordinate

- name: "create directory /var/run/uwsgi for uwsgi socket"
  file:
    path: '/var/run/uwsgi'
    state: directory
    owner: 'www-data'
    group: 'www-data'
    mode: '0755'

- name: "systemd unit for uwsgi request-by-coordinate"
  template:
    dest: '/etc/systemd/system/request-by-coordinate.service'
    src: 'systemd.jinja'
    mode: '0644'

- name: 'ufw: allow osrm access from own servers'
  ufw:
    comment: 'allow {{ item.comment }}'
    rule: allow
    port: '3330:3340'
    proto: tcp
    from_ip: '{{ item.src }}'
  with_items:
    - {'comment': 'routing3', 'src': '88.99.61.41' }
    - {'comment': 'routing3', 'src': '2a01:4f8:10a:d68::/64' }
    - {'comment': 'routing4', 'src': '138.201.64.66'}
    - {'comment': 'routing4', 'src': '2a01:4f8:172:1941::/64'}
    - {'comment': 'routing5', 'src': '136.243.131.227'}
    - {'comment': 'routing5', 'src': '2a01:4f8:212:33a2::/64'}


- name: "nginx config for rate limit"
  template:
    dest: '/etc/nginx/conf.d/ratelimit.conf'
    src:  'nginx-ratelimit.conf.jinja'
    mode: '0644'
  notify: restart nginx

- name: "nginx config for anonymized ip adresses"
  copy:
    src: 'log_anonymized.conf'
    dest: '/etc/nginx/conf.d/log_anonymized.conf'
  notify: restart nginx

- name: "default nginx site"
  nginx_site:
    site: 'default'
    src:  'nginx-default.jinja'
  vars:
    answer_routes: True
    munin: True
    server_name: "_"
    default_server: "default_server"
  notify: restart nginx

- name: "nginx site for map.project-osrm.org"
  nginx_site:
    site: 'map.project-osrm.org'
    src:  'nginx-default.jinja'
  vars:
    answer_routes: False
    munin: False
    server_name: "map.project-osrm.org"
    default_server: ""
  notify: restart nginx

- name: "nginx site for router.project-osrm.org"
  nginx_site:
    site: 'router.project-osrm.org'
    src:  'nginx-router.project-osrm.org.jinja'
  vars:
    server_name: "router.project-osrm.org"
    default_server: ""
  notify: restart nginx

- name: "nginx status site"
  nginx_site:
    site: 'status'
    src:  'nginx-status.jinja'
  notify: restart nginx

- name: "Install munin"
  apt:
    name: [munin]

- name: "enable munin plug in {{ item }}"
  file:
    src: '/usr/share/munin/plugins/{{ item }}'
    dest: '/etc/munin/plugins/{{ item }}'
    state: link
  with_items:
    - "nginx_request"
    - "nginx_status"
  notify: restart munin-node

- name: "create web base directory"
  file:
    path: '/var/www/routing'
    state: directory
    owner: 'www-data'
    group: 'www-data'
    mode: '0755'

- name: "Write /429.html"
  copy:
    src: '429.html'
    dest: '/var/www/routing/429.html'

