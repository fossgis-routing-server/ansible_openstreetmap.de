# SPDX-License-Identifier: MIT
---
- name: "Install uwsgi for request-by-coordinate dispatcher"
  apt:
    name: [git, python3-cherrypy3, uwsgi, uwsgi-plugin-python3]

- name: "checkout request-by-coordinate"
  git:
    repo: git://github.com/fossgis-routing-server/request-by-coordinate.git
    dest: '{{ osrm.basedir }}/request-by-coordinate'
    version: '89faaf71f1acd13bfd182cd09e20af2a604cc94a'
    force: yes

- name: "set request-by-coordinate configuration"
  template:
    dest: '{{ osrm.basedir }}/request-by-coordinate/settings.cfg'
    src: 'request-by-coordinate.cfg.erb'
    owner: '{{ osrm.user }}'
    group: '{{ osrm.user }}'
    mode: '0644'
  notify: restart request-by-coordinate

- name: "create directory /var/run/uwsgi for uwsgi socket"
  file:
    path: '/var/run/uwsgi'
    state: directory
    owner: 'www-data'
    group: 'www-data'
    mode: '0755'

- name: "systemd unit for uwsgi request-by-coordinate"
  template:
    dest: '/etc/systemd/system/request-by-coordinate.service'
    src: 'systemd.jinja'
    mode: '0644'

- name: 'ufw: allow osrm access from own servers'
  ufw:
    comment: 'allow {{ item.comment }}'
    rule: allow
    port: '3330:3340'
    proto: tcp
    from_ip: '{{ item.src }}'
  with_items:
    - {'comment': 'routing3', 'src': '88.99.61.41' }
    - {'comment': 'routing3', 'src': '2a01:4f8:10a:d68::/64' }
    - {'comment': 'routing4', 'src': '138.201.64.66'}
    - {'comment': 'routing4', 'src': '2a01:4f8:172:1941::/64'}
    - {'comment': 'routing5', 'src': '136.243.131.227'}
    - {'comment': 'routing5', 'src': '2a01:4f8:212:33a2::/64'}

- name: "Install nginx web server"
  apt:
    name: [nginx]

- name: "nginx config for rate limit"
  template:
    dest: '/etc/nginx/conf.d/ratelimit.conf'
    src:  'nginx-ratelimit.conf.jinja'
    mode: '0644'
  notify: restart nginx

- name: "nginx config for anonymized ip adresses"
  copy:
    src: 'log_anonymized.conf'
    dest: '/etc/nginx/conf.d/log_anonymized.conf'
  notify: restart nginx

- name: "default nginx site"
  template:
    dest: '/etc/nginx/sites-available/default'
    src:  'nginx-default.jinja'
    mode: '0644'
  vars:
    answer_routes: True
    munin: True
    server_name: "_"
    default_server: "default_server"
  notify: restart nginx
- name: "enable default nginx site"
  file:
    src: '../sites-available/default'
    dest: '/etc/nginx/sites-enabled/default'
    state: link

- name: "nginx site for map.project-osrm.org"
  template:
    dest: '/etc/nginx/sites-available/map.project-osrm.org'
    src:  'nginx-default.jinja'
    mode: '0644'
  vars:
    answer_routes: False
    munin: False
    server_name: "map.project-osrm.org"
    default_server: ""
  notify: restart nginx
- name: "enable nginx site for map.project-osrm.org"
  file:
    src: '../sites-available/map.project-osrm.org'
    dest: '/etc/nginx/sites-enabled/map.project-osrm.org'
    state: link

- name: "nginx site for router.project-osrm.org"
  template:
    dest: '/etc/nginx/sites-available/router.project-osrm.org'
    src:  'nginx-router.project-osrm.org.jinja'
    mode: '0644'
  vars:
    server_name: "router.project-osrm.org"
    default_server: ""
  notify: restart nginx
- name: "enable nginx site for router.project-osrm.org"
  file:
    src: '../sites-available/router.project-osrm.org'
    dest: '/etc/nginx/sites-enabled/router.project-osrm.org'
    state: link

- name: "nginx status site"
  template:
    dest: '/etc/nginx/sites-available/status'
    src:  'nginx-status.jinja'
    mode: '0644'
  notify: restart nginx
- name: "enable nginx site for status"
  file:
    src: '../sites-available/status'
    dest: '/etc/nginx/sites-enabled/status'
    state: link

- name: "enable munin plug in {{ item }}"
  file:
    src: '/usr/share/munin/plugins/{{ item }}'
    dest: '/etc/munin/plugins/{{ item }}'
    state: link
  with_items:
    - "nginx_request"
    - "nginx_status"
  notify: restart munin-node

- name: "Write /429.html"
  copy:
    src: '429.html'
    dest: '/var/www/routing/429.html'

