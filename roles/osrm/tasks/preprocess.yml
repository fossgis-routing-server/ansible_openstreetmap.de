- name: "Set up route calculation on osrm__buildhost"
  block:
  - name: "create directories osmdata, extract, scripts"
    file:
      path: '{{ osrm__basedir }}/{{ item }}'
      state: directory
      owner: '{{ osrm__user }}'
      group: '{{ osrm__user }}'
    with_items:
      - 'osmdata'
      - 'extract'
      - 'scripts'

  - name: "osmium tool for planet update and transform"
    apt:
      name: [pyosmium, osmium-tool]

  - name: "Download planet (full installation)"
    command:
      cmd: "wget https://planet.osm.org/pbf/planet-latest.osm.pbf -nc -O {{ osrm__basedir }}/osmdata/osmdata.pbf"
      chdir: "{{ osrm__basedir }}/osmdata/"
      creates: '{{ osrm__basedir }}/osmdata/osmdata.pbf'
    become: yes
    become_user: '{{ osrm__user }}'
    when: "not osrm__small"

  - name: "Prepare small OSM subset (for testing)"
    block:
    - name: "Download small OSM subset (for testing) Liechtenstein [euasi]"
      get_url:
        url: "http://download.geofabrik.de/europe/liechtenstein-latest.osm.pbf"
        dest: "{{ osrm__basedir }}/osmdata/euasi.pbf"
        owner: "{{ osrm__user }}"

    - name: "Download small OSM subset (for testing) Saint Helena, Ascension, and Tristan da Cunha [afoce]"
      get_url:
        url: "http://download.geofabrik.de/africa/saint-helena-ascension-and-tristan-da-cunha-latest.osm.pbf"
        dest: '{{ osrm__basedir }}/osmdata/afoce.pbf'
        owner: "{{ osrm__user }}"

    - name: "Download small OSM subset (for testing) Virgin Islands [us]"
      get_url:
        url: "http://download.geofabrik.de/north-america/us/us-virgin-islands-latest.osm.pbf"
        dest: '{{ osrm__basedir }}/osmdata/us.pbf'
        owner: "{{ osrm__user }}"

    - name: "poly for small extract"
      copy:
        src: 'small_extract.poly'
        dest: "{{ osrm__basedir }}/osmdata/small_extract.poly"

    - name: "combine small extracts into one pbf"
      command:
        cmd: "osmium merge euasi.pbf afoce.pbf us.pbf -o small.pbf"
        chdir: "{{ osrm__basedir }}/osmdata/"
        creates: '{{ osrm__basedir }}/osmdata/small.pbf'
      become: yes
      become_user: '{{ osrm__user }}'
    when: "osrm__small"

  - name: "osmium cut configuration"
    template:
      dest: '{{ osrm__basedir }}extract/{{ item.key }}.osmiconf'
      src: 'osmiconf.jinja'
    vars:
      osmdatadir: "{{ osrm__basedir }}osmdata/"
    loop: "{{ osrm__profiles|dict2items }}"

  # routing profiles

  - name: "git routing profile"
    git:
      repo: https://github.com/fossgis-routing-server/cbf-routing-profiles.git
      dest: '{{ osrm__basedir }}/cbf-routing-profiles'
      version: '47f065d0eeb2e953f6b19b3b300cf50f13928d86'
      force: yes
    become: yes
    become_user: '{{ osrm__user }}'

  - name: "profile region links"
    file:
      src: '{{ item.value.profile }}.lua'
      dest: '{{ osrm__basedir }}/cbf-routing-profiles/{{ item.key }}.lua'
      state: link
    loop: '{{ osrm__profilearea|dict2items }}'
    loop_control:
      label: '{{ item.key }}'

  - name: "build graphs script"
    template:
      dest: "{{ osrm__basedir }}scripts/buildgraphs.sh"
      src: "build-graphs.j2"
    vars:
      osmdatadir: "{{ osrm__basedir }}osmdata/"
      myhostname: inventory_hostname
      pbfname: "{{ osrm__small | ternary('small.pbf', 'osmdata.pbf') }}"

  - name: "install systemd service for build graphs loop"
    systemd_service:
      name: "build-graphs"
      enabled: true
      service:
        Unit:
          Description: Open Source Routing Machine precomputation
          After: syslog.target network.target
        Service:
          Type: simple
          User: '{{ osrm__user }}'
          Group: '{{ osrm__user }}'
          ExecStart: "/bin/bash {{ osrm__basedir }}/scripts/buildgraphs.sh"
          Restart: always
          RestartSec: 700
  when: "osrm__buildhost == inventory_hostname"


- name: "remove systemd unit from non preprocess hosts"
  file:
    path: '/etc/systemd/system/build-graphs.service'
    state: "absent"
  when: "osrm__buildhost != inventory_hostname"
