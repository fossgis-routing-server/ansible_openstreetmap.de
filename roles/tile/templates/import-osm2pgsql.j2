#!/bin/bash
#
# -- Maintained with ansible. DO NOT EDIT! --
#
# Creates the render DB from the current planet.

# Redirect all outputs to the journal and output to the console at the same time
exec > >(tee >(logger -t osm2pgsql-import)) 2>&1

set -e

# stop render database updates if they are running
sudo systemctl disable updatedb
sudo systemctl stop updatedb

{% if tile__small %}
OSM_SOURCE=http://download.geofabrik.de/europe/monaco-latest.osm.pbf
#OSM_SOURCE=https://download.geofabrik.de/asia/south-korea-latest.osm.pbf
#OSM_SOURCE=https://download.geofabrik.de/europe/hungary-latest.osm.pbf
#OSM_SOURCE=https://download.geofabrik.de/europe/iceland.html
#OSM_SOURCE=https://download.geofabrik.de/europe/estonia-latest.osm.pbf
#OSM_SOURCE=https://download.geofabrik.de/asia/israel-and-palestine-latest.osm.pbf
#OSM_SOURCE=https://download.geofabrik.de/europe/germany/baden-wuerttemberg/karlsruhe-regbez-latest.osm.pbf
{% else %}
OSM_SOURCE=https://ftp5.gwdg.de/pub/misc/openstreetmap/planet.openstreetmap.org/pbf/planet-latest.osm.pbf
{% endif %}

cd $(dirname $(realpath {{ tile__planet }}))

# create planet file with correct permissions
if [ ! -f  $(basename $OSM_SOURCE) ]
then sudo touch -d 2000-01-01 $(basename $OSM_SOURCE)
fi
sudo chown {{ tile__user }} $(basename $OSM_SOURCE)

sudo -u {{ tile__user }} wget -N $OSM_SOURCE
sudo ln -f $(basename $OSM_SOURCE) $(basename $(realpath {{ tile__planet }}))

set +e
sudo -u tile pyosmium-up-to-date {{ tile__planet }} -s 10000
echo "$(date '+%Y-%m-%d %H:%M:%S')  pyosmium-up-to-date exited with status $?"
set -e

# create flatnode file with correct permissions
sudo touch {{ tile__flatnode }} && sudo chown _tirex {{ tile__flatnode }}

sudo -u _tirex osm2pgsql --create -d {{ dbname }} --slim --output flex \
  --number-processes {{ ansible_facts['processor_cores'] }} -S {{ lua }} \
{% if not tile__small %}
  --flat-nodes {{ tile__flatnode }} \
{% endif %}
  {{ tile__planet }}

# create planet-import-complete file with current timestamp
# https://github.com/openstreetmap/tirex/blob/94e6392d0e1f30d4534d4699e16a1b4914980881/lib/Tirex/Source/ModTile.pm#L134
sudo touch /var/cache/tirex/tiles/planet-import-complete

sudo -u _tirex psql -d {{ dbname }} -f {{ style }}/indexes.sql

sudo -u _tirex psql -d {{ dbname }} -f {{ style }}/functions.sql

sudo -u _tirex osm2pgsql-replication init  -d {{ dbname }} --server https://planet.openstreetmap.org/replication/minute
sudo -u _tirex osm2pgsql-replication status -d {{ dbname }}

# make sure auxiliary data is loaded
cd {{ style }}
sudo mkdir -p data
sudo chown _tirex data
sudo -u _tirex scripts/get-external-data.py -d {{ dbname }}

# make sure fonts are complete
cd {{ style }}
sudo mkdir -p fonts
sudo chown _tirex fonts
# currently, font download is broken. Package of current fonts on robinson
# sudo -u _tirex scripts/get-fonts.sh
cd fonts
sudo -u _tirex wget https://robinson.openstreetmap.de/carto-fonts/carto-fonts.zip
sudo -u _tirex unzip -o carto-fonts.zip

# enable minutely updates
sudo systemctl enable updatedb
sudo systemctl start updatedb

sudo systemctl restart tirex-backend-manager
sudo systemctl restart tirex-master

timeout=30
elapsed=0

while (! systemctl is-active --quiet tirex-master || [ ! -e /var/run/tirex/master.sock ]) && [ $elapsed -lt $timeout ]; do
  sleep 1
  elapsed=$((elapsed + 1))
done

if [ $elapsed -ge $timeout ]; then
  echo "tirex-master is not active"
  exit 1
fi

# queue up prerendering of low zooms
{% if tile__small %}
tirex-batch --prio=99 map=osmde z=1-2 lon=-180,180 lat=-90,90
{% else %}
tirex-batch --prio=99 map=osmde z=1-12 lon=-180,180 lat=-90,90
tirex-batch --prio=99 map=osmde z=13-17 lon=5,15 lat=47,55
tirex-batch --prio=99 map=osmhrb z=8-17 lon=13.42,15.39 lat=50.75,52.27
{% endif %}
