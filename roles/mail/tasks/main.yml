# SPDX-License-Identifier: MIT
---
- name: Install Postfix
  apt:
    name: [postfix]

- name: set /etc/mailname
  copy:
    dest: /etc/mailname
    owner: root
    group: root
    mode: 0644
    content: |
      {{ mail.mailname }}

- name: 'virtual_alias_map and bad_senders'
  include_tasks: write_and_hash.yml
  loop:
    - {'dest': '/etc/postfix/virtual_alias_map', 'cmd': 'postmap'}
    - {'dest': '/etc/aliases', 'cmd': 'postmap'}

- name: Write /etc/postfix/main.cf
  template:
    dest: /etc/postfix/main.cf
    src: main.cf
    owner: root
    group: root
    mode: 0644
  notify:
    - systemctl reload postfix

- name: Write /etc/postfix/master.cf
  copy:
    dest: /etc/postfix/master.cf
    src: master.cf
    owner: root
    group: root
    mode: 0644
  notify:
    - systemctl reload postfix

- name: Install OpenDKIM
  when: mail.opendkim
  block:
    - name: Install OpenDKIM from APT
      apt:
        name: [opendkim, opendkim-tools]

    - name: Write /etc/opendkim.conf
      copy:
        src: opendkim.conf
        dest: /etc/opendkim.conf
        owner: root
        group: root
        mode: 0644
      notify:
        - systemctl restart opendkim

    - name: Ensure correct permissions on /etc/opendkim
      file:
        state: directory
        path: /etc/opendkim
        owner: root
        group: root
        mode: 0755

    - name: Ensure correct permissions on /etc/opendkim/keys
      file:
        state: directory
        path: /etc/opendkim/keys
        owner: root
        group: opendkim
        mode: 0750
      notify:
        - systemctl restart opendkim

    - name: Create OpenDKIM key
      shell:
        chdir: /etc/opendkim
        cmd: 'opendkim-genkey --selector=2020 --bits=2048 --directory=keys'
        creates: /etc/opendkim/keys/2020.private
      register: opendkim_key_creation

    - name: Make OpenDKIM key readable for user opendkim
      when: opendkim_key_creation.changed
      file:
        path: '/etc/opendkim/keys/{{ item }}'
        owner: opendkim
        group: root
        mode: 0600
      loop:
        - '2020.private'
        - '2020.txt'

    - name: Print public OpenDKIM key
      when: opendkim_key_creation.changed
      block:
        - slurp:
            src: /etc/opendkim/keys/2020.txt
          register: opendkim_public_key
        - debug:
            msg: 'Please publish the following DNS entry with your public DKIM key:\n{{ opendkim_public_key }}'

    - name: Write /etc/opendkim/keytable
      copy:
        dest: /etc/opendkim/keytable
        owner: root
        group: root
        mode: 0644
        content: |
          default    %:2020:/etc/opendkim/keys/2020.private
      notify:
        - systemctl restart opendkim

    - name: Write /etc/opendkim/signingtable
      copy:
        dest: /etc/opendkim/signingtable
        owner: root
        group: root
        mode: 0644
        content: |
          *@{{ mail.mailname}} default
          {% for item in mail.domains %}
          *@{{ item }} default
          {% endfor %}
      notify:
        - systemctl restart opendkim

    - name: Create /var/spool/postfix/opendkim
      file:
        path: /var/spool/postfix/opendkim
        owner: opendkim
        group: opendkim
        mode: 0755
        state: directory

    - name: Add Postfix to opendkim group
      user:
        append: yes
        name: postfix
        groups: opendkim

- name: Install sasl auth
  when: mail.relay | default(False)
  block:
    - name: Install saslauth from APT
      apt:
        name: [libsasl2-modules, sasl2-bin]

    - name: Write /etc/postfix/sasl/smtpd.conf
      copy:
        dest: /etc/postfix/sasl/smtpd.conf
        owner: root
        group: root
        mode: 0644
        content: |
          pwcheck_method: auxprop
          auxprop_plugin: sasldb
          mech_list: plain login
      notify:
        - systemctl restart postfix

    - name: Clear sasldb2
      file:
        path: /etc/sasldb2
        state: absent

    - name: Add users to sasldb2
      command:
        cmd: "saslpasswd2 -c -u {{ mail.mailname }} {{ item.key }}"
        stdin: "{{ item.value }}"
      loop: "{{ mail_users | dict2items }}"

    - name: Add /etc/sasldb2 to postfix chroot
      replace:
        path: /usr/lib/postfix/configure-instance.sh
        regexp: 'etc/host.conf etc/nsswitch.conf etc/nss_mdns.config"$'
        replace: 'etc/host.conf etc/nsswitch.conf etc/nss_mdns.config etc/sasldb2"'
      notify:
        - systemctl restart postfix

    - name: 'ufw: allow smtp submission'
      ufw:
        comment: 'allow submission'
        rule: allow
        name: "Mail submission"
